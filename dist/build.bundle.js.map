{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"prop-types\"","webpack:///external \"@trbl/react-window-info\"","webpack:///external \"@trbl/react-scroll-info\"","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/NodePositionProvider/context.js","webpack:///./src/NodePositionProvider/index.js","webpack:///./src/useNodePosition/index.js","webpack:///./src/withNodePosition/index.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","MapShim","Map","getIndex","arr","result","some","entry","index","class_1","this","__entries__","length","configurable","set","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","isBrowser","window","document","global$1","global","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","target","props","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","apply","g","e","NodePositionContext","React","createContext","NodePositionProvider","setState","state","documentInfo","eventsFired","resizeObserver","canUseResizeObserver","canUseIntersectionObserver","IntersectionObserverEntry","handleResizeEvent","box","children","Provider","Component","defaultProps","undefined","propTypes","PropTypes","node","defaultOptions","initialNodePosition","clippingMask","nodeRect","intersectionRect","isVisible","xVisibility","yVisibility","visibility","xPlaneVisibility","yPlaneVisibility","isVisibleInPlaneX","isVisibleInPlaneY","xDisplacement","yDisplacement","displacement","totalOffsetLeft","totalOffsetTop","usePrevious","ref","useRef","useEffect","current","getNodeRect","nodeRef","getBoundingClientRect","nodePositionReducer","payload","console","log","incomingClippingMask","incomingNodeRect","visibilityStatus","incomingVisibilityStatus","planeIntersectionRect","nodeSideIsInPlaneY","rectSide","nodeIsContainedInPlaneY","nodeSpansPlaneY","nodeStraddlesFrameLeft","nodeStraddlesFrameRight","nodeSideIsInPlaneX","nodeIsContainedInPlaneX","nodeSpansPlaneX","nodeStraddlesFrameTop","nodeStraddlesFrameBottom","calculateIntersection","xTrackLength","yTrackLength","calculateDisplacement","useNodePosition","incomingOptions","useReducer","nodePosition","dispatchNodePosition","options","intersectionObserverRef","useContext","setupInstersectionObserver","useCallback","shouldSetThreshold","reportScrollEvents","IntersectionObserver","rootBounds","boundingClientRect","isIntersecting","root","rootMargin","threshold","intersectionThreshold","intersectionObserver","windowInfo","useWindowInfo","prevWindowEventsFired","scrollInfo","useScrollInfo","prevScrollEventsFired","yDifference","xDifference","func","withNodePosition","PassedComponent"],"mappings":"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","file":"build.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"react\");","module.exports = require(\"prop-types\");","module.exports = require(\"@trbl/react-window-info\");","module.exports = require(\"@trbl/react-scroll-info\");","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import React from 'react';\n\nconst NodePositionContext = React.createContext({});\n\nexport default NodePositionContext;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { WindowInfoProvider } from '@trbl/react-window-info';\nimport { ScrollInfoProvider } from '@trbl/react-scroll-info';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nimport NodePositionContext from './context';\n\nclass NodePositionProvider extends Component {\n  constructor() {\n    super();\n\n    this.resizeObserver = null;\n\n    this.state = {\n      documentInfo: {\n        width: 0,\n        height: 0,\n        eventsFired: 0,\n      },\n      canUseResizeObserver: false,\n      canUseIntersectionObserver: false,\n    };\n  }\n\n  componentDidMount() {\n    const canUseResizeObserver = 'ResizeObserver' in window;\n    const canUseIntersectionObserver = 'IntersectionObserver' in window\n      && 'IntersectionObserverEntry' in window\n      && 'intersectionRatio' in window.IntersectionObserverEntry.prototype;\n\n    if (canUseResizeObserver) {\n      this.resizeObserver = new ResizeObserver(this.handleResizeEvent);\n      this.resizeObserver.observe(document.documentElement, { box: 'border-box' });\n    }\n\n    this.setState({ canUseResizeObserver, canUseIntersectionObserver });\n  }\n\n  componentWillUnmount() {\n    const { canUseResizeObserver } = this.state;\n    if (canUseResizeObserver) this.resizeObserver.unobserve(document.documentElement);\n  }\n\n  handleResizeEvent = (entries) => {\n    const { contentRect: { width, height } } = entries[0];\n    this.setState((state) => ({\n      documentInfo: {\n        width,\n        height,\n        eventsFired: state.eventsFired + 1,\n      },\n    }));\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <WindowInfoProvider>\n        <ScrollInfoProvider>\n          <NodePositionContext.Provider value={{ ...this.state }}>\n            {children && children}\n          </NodePositionContext.Provider>\n        </ScrollInfoProvider>\n      </WindowInfoProvider>\n    );\n  }\n}\n\nNodePositionProvider.defaultProps = {\n  children: undefined,\n};\n\nNodePositionProvider.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default NodePositionProvider;\n","import { useEffect, useContext, useReducer, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useWindowInfo } from '@trbl/react-window-info';\nimport { useScrollInfo } from '@trbl/react-scroll-info';\nimport NodePositionContext from '../NodePositionProvider/context';\n\nconst defaultOptions = {};\n\nconst initialNodePosition = {\n  clippingMask: {\n    width: 0,\n    height: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  nodeRect: {\n    width: 0,\n    height: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  intersectionRect: {\n    width: 0,\n    height: 0,\n  },\n  isVisible: false,\n  xVisibility: 0,\n  yVisibility: 0,\n  visibility: 0,\n  xPlaneVisibility: 0,\n  yPlaneVisibility: 0,\n  isVisibleInPlaneX: false,\n  isVisibleInPlaneY: false,\n  xDisplacement: 0,\n  yDisplacement: 0,\n  displacement: 0,\n  totalOffsetLeft: 0,\n  totalOffsetTop: 0,\n};\n\nconst usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => { ref.current = value; });\n  return ref.current;\n};\n\nconst calculateIntersection = (clippingMask, nodeRect, incomingVisibilityStatus) => {\n  const planeIntersectionRect = { width: 0, height: 0 };\n\n  const nodeSideIsInPlaneY = (rectSide) => rectSide >= clippingMask.left && rectSide <= clippingMask.right;\n  const nodeIsContainedInPlaneY = nodeSideIsInPlaneY(nodeRect.right) && nodeSideIsInPlaneY(nodeRect.left);\n  const nodeSpansPlaneY = nodeRect.left < clippingMask.left && nodeRect.right > clippingMask.right;\n  const nodeStraddlesFrameLeft = nodeSideIsInPlaneY(nodeRect.right) && nodeRect.left <= clippingMask.left;\n  const nodeStraddlesFrameRight = nodeSideIsInPlaneY(nodeRect.left) && nodeRect.right >= clippingMask.right;\n\n  if (nodeIsContainedInPlaneY) planeIntersectionRect.width = nodeRect.width;\n  if (nodeStraddlesFrameLeft) planeIntersectionRect.width = nodeRect.right;\n  if (nodeStraddlesFrameRight) planeIntersectionRect.width = clippingMask.right - nodeRect.left;\n  if (nodeSpansPlaneY) planeIntersectionRect.width = clippingMask.width;\n\n  const nodeSideIsInPlaneX = (rectSide) => rectSide >= clippingMask.top && rectSide <= clippingMask.bottom;\n  const nodeIsContainedInPlaneX = nodeSideIsInPlaneX(nodeRect.top) && nodeSideIsInPlaneX(nodeRect.bottom);\n  const nodeSpansPlaneX = nodeRect.top < clippingMask.top && nodeRect.bottom > clippingMask.bottom;\n  const nodeStraddlesFrameTop = nodeSideIsInPlaneX(nodeRect.bottom) && nodeRect.top <= clippingMask.top;\n  const nodeStraddlesFrameBottom = nodeSideIsInPlaneX(nodeRect.top) && nodeRect.bottom >= clippingMask.bottom;\n\n  if (nodeIsContainedInPlaneX) planeIntersectionRect.height = nodeRect.height;\n  if (nodeStraddlesFrameTop) planeIntersectionRect.height = nodeRect.bottom;\n  if (nodeStraddlesFrameBottom) planeIntersectionRect.height = clippingMask.height - nodeRect.top;\n  if (nodeSpansPlaneX) planeIntersectionRect.height = clippingMask.height;\n\n  const xPlaneVisibility = planeIntersectionRect.height / nodeRect.height || 0;\n  const yPlaneVisibility = planeIntersectionRect.width / nodeRect.width || 0;\n\n  const isVisibleInPlaneX = xPlaneVisibility > 0;\n  const isVisibleInPlaneY = yPlaneVisibility > 0;\n\n  // The incomingVisibilityStatus argument is needed here to account for when the Intersection Observer\n  // triggers this method with either isVisibleInPlaneX or isVisibleInPlaneY of zero, leading the isVisible state to become false\n  // and ultimately fail the conditions within componentDidUpdate that allow the scroll event to take over.\n  // This approach creates two sources of truth for the isVisible state, so there may be room for improvement here (isIdle?).\n  const isVisible = incomingVisibilityStatus !== undefined\n    ? incomingVisibilityStatus\n    : isVisibleInPlaneX && isVisibleInPlaneY;\n\n  const xVisibility = isVisible ? xPlaneVisibility : 0;\n  const yVisibility = isVisible ? yPlaneVisibility : 0;\n  const visibility = isVisible ? (xVisibility + yVisibility) / 2 : 0;\n\n  return {\n    intersectionRect: {\n      width: isVisible ? planeIntersectionRect.width : 0,\n      height: isVisible ? planeIntersectionRect.height : 0,\n    },\n    isVisible,\n    xVisibility,\n    yVisibility,\n    visibility,\n    xPlaneVisibility,\n    yPlaneVisibility,\n    isVisibleInPlaneX,\n    isVisibleInPlaneY,\n  };\n};\n\nconst calculateDisplacement = (clippingMask, nodeRect) => {\n  const xTrackLength = clippingMask.width + nodeRect.width;\n  const xDisplacedPixels = nodeRect.right - clippingMask.left;\n  const xDisplacement = (xDisplacedPixels / xTrackLength) || 0;\n\n  const yTrackLength = clippingMask.height + nodeRect.height;\n  const yDisplacedPixels = nodeRect.bottom - clippingMask.top;\n  const yDisplacement = (yDisplacedPixels / yTrackLength) || 0;\n\n  const displacement = (xDisplacement + yDisplacement) / 2;\n\n  return {\n    xDisplacement,\n    yDisplacement,\n    displacement,\n  };\n};\n\nconst calculateTotalOffset = () => ({\n  totalOffsetLeft: 0,\n  totalOffsetTop: 0,\n});\n\nconst getNodeRect = (nodeRef) => {\n  const { current: node } = nodeRef;\n  const { width, height, top, right, bottom, left } = node.getBoundingClientRect();\n  return { width, height, top, right, bottom, left };\n};\n\nconst nodePositionReducer = (state, payload) => {\n  console.log('DISPATCH_REDUCER');\n  const {\n    clippingMask: incomingClippingMask,\n    nodeRect: incomingNodeRect,\n    visibilityStatus,\n  } = payload;\n\n  const clippingMask = incomingClippingMask || state.clippingMask;\n  const nodeRect = incomingNodeRect || state.nodeRect;\n\n  return {\n    clippingMask,\n    nodeRect,\n    ...calculateIntersection(clippingMask, nodeRect, visibilityStatus),\n    ...calculateDisplacement(clippingMask, nodeRect),\n    ...calculateTotalOffset(nodeRect),\n  };\n};\n\nconst useNodePosition = (nodeRef, incomingOptions) => {\n  const [nodePosition, dispatchNodePosition] = useReducer(nodePositionReducer, initialNodePosition);\n\n  //\n  // Merge options with defaults into state\n  //\n\n  const options = useRef({\n    ...defaultOptions,\n    ...incomingOptions,\n  });\n\n  //\n  // Handle incoming node ref\n  //\n\n  useEffect(() => {\n    console.log('REF_EVENT');\n    dispatchNodePosition({ nodeRect: getNodeRect(nodeRef) });\n  }, [nodeRef]);\n\n  //\n  // Handling intersection events\n  //\n\n  const intersectionObserverRef = useRef();\n\n  const {\n    documentInfo,\n    canUseIntersectionObserver,\n  } = useContext(NodePositionContext);\n\n  const setupInstersectionObserver = useCallback(() => {\n    const shouldSetThreshold = !(options.current.reportScrollEvents === 'always' || options.current.reportScrollEvents === 'whenVisible');\n    intersectionObserverRef.current = new IntersectionObserver(\n      ([{\n        rootBounds: clippingMask,\n        boundingClientRect: nodeRect,\n        isIntersecting: isVisible,\n      }]) => {\n        console.log('INTERSECTION_EVENT');\n        dispatchNodePosition({ clippingMask, nodeRect, isVisible });\n      }, {\n        root: null, // or `options.root` to be enabled in a future enhancement\n        rootMargin: '0px',\n        threshold: shouldSetThreshold ? options.current.intersectionThreshold : 0,\n      },\n    );\n  }, [options]);\n\n  useEffect(() => {\n    const { current: intersectionObserver } = intersectionObserverRef;\n    const { current: node } = nodeRef;\n\n    if (canUseIntersectionObserver && !intersectionObserver) {\n      setupInstersectionObserver();\n      intersectionObserverRef.current.observe(node);\n    }\n\n    return () => {\n      if (canUseIntersectionObserver && !intersectionObserver) {\n        intersectionObserver.unobserve(node);\n      }\n    };\n  }, [canUseIntersectionObserver, nodeRef, setupInstersectionObserver]);\n\n  //\n  // Handle window resize events\n  //\n\n  const windowInfo = useWindowInfo();\n  const prevWindowEventsFired = usePrevious(windowInfo.eventsFired);\n\n  useEffect(() => {\n    if (windowInfo.eventsFired > prevWindowEventsFired) {\n      console.log('WINDOW_EVENT');\n      dispatchNodePosition({\n        clippingMask: {\n          width: windowInfo.width,\n          height: windowInfo.height,\n          top: 0,\n          right: windowInfo.width,\n          bottom: windowInfo.height,\n          left: 0,\n        },\n        nodeRect: getNodeRect(nodeRef),\n      });\n    }\n  }, [windowInfo, prevWindowEventsFired, nodeRef]);\n\n  //\n  // Handle scroll events\n  //\n\n  const scrollInfo = useScrollInfo();\n  const prevScrollEventsFired = usePrevious(scrollInfo.eventsFired);\n\n  useEffect(() => {\n    if (\n      scrollInfo.eventsFired > prevScrollEventsFired\n      && (!documentInfo.canUseIntersectionObserver\n        || options.current.reportScrollEvents === 'always'\n        || (!options.current.isVisible && options.current.reportScrollEvents === 'whenInvisible')\n        || (options.current.isVisible && options.current.reportScrollEvents === 'whenVisible'))\n    ) {\n      console.log('SCROLL');\n      const { nodeRect } = nodePosition;\n      dispatchNodePosition({\n        nodeRect: {\n          width: nodeRect.width,\n          height: nodeRect.height,\n          top: nodeRect.top - scrollInfo.yDifference,\n          right: nodeRect.right - scrollInfo.xDifference,\n          bottom: nodeRect.bottom - scrollInfo.yDifference,\n          left: nodeRect.left - scrollInfo.xDifference,\n        },\n      });\n    }\n  }, [scrollInfo, documentInfo, options, prevScrollEventsFired, nodePosition]);\n\n  return nodePosition;\n};\n\nuseNodePosition.defaultProps = {\n  ref: undefined,\n};\n\nuseNodePosition.propTypes = {\n  ref: PropTypes.func,\n};\n\nexport default useNodePosition;\n","import React, { useRef } from 'react';\nimport useNodePosition from '../useNodePosition';\n\nconst withNodePosition = (PassedComponent) => {\n  const NodePositionWrap = (props) => {\n    const ref = useRef();\n    const nodePosition = useNodePosition(ref);\n    return (\n      <PassedComponent\n        {...{\n          ...props,\n          ref,\n          nodePosition,\n        }}\n      />\n    );\n  };\n  return NodePositionWrap;\n};\n\nexport default withNodePosition;\n","export { default as NodePositionProvider } from './NodePositionProvider';\nexport { default as useNodePosition } from './useNodePosition';\nexport { default as withNodePosition } from './withNodePosition';\n"],"sourceRoot":""}